    OPTIONS - безопасный метод взаимодействия с сервером, вызываемый автоматичесик при выполнениии любого фетч или XMLHTTPrequest'а. Его вызов происходит в рамках CORS. 
    В метод OPTIONS мы передаем метод запроса, который будет отправлен (Access-Control-Request-Method) и заголовки этого запроса (Access-Control-Request-Headers). 
    Ответ содержит разрешенные методы(Access-Control-Allow-Methods) и заголовки (Access-Control-Allow-Headers), время кешировния этого ответа (Access-Control-Max-Age).

    HTTPS 3.0 
    Основным преимуществом трейтьей версии является переход с устаревшего транспортного протокола TCP на более современный QUIC. 
    Преимущества QUIC: 
    При потере пакетов во время передачи QUIC не блокирует дальнейшую загрузку пакетов, как это было в HTTP/1, HTTP/2, блокируется только информация, передаваемая в рамках одного потока.
    
    При смене сетей TCP разрывал соединение, его нужно устанавливать заного, поскольку при проверке сверялись (IP-адрес клиента + порт клиента + IP-адрес сервера + порт сервера).
    QUIC вводит новую концепцию - CID (идентификатор соединения), он не меняется при смене сетей и передается в заголовке каждого пакета QUIC.

    Безопасность. QUIC всегда зашифрован т.к. проктокол шифрования TLS интегрирован в него, в TCP же можно использовтаь режим передачи открытого текста HTML 2, что может быть использовано злоумышленниками.
    Также благодаря интеграции TLS в QUIC, объединяются транспортные и криптографические рукопожатия, которые нужны по отдельности в паре TLS TCP, что положительно сказывается на скорости установки соединения.



    Отмена HTTP запроса. В случаях, когда необходимо отменить запрос используется интерфейс AbortController. Для того, чтобы была возможность отменить fetch в его options передают AbortSignal.
    После этого, если будет вызван метод abort(), запрос будет отменен.

    Переменные, созданные через let или const, до того момента в коде, где они объявлены при обращении вызовут ошибку ReferenceError, так как находятся в TDZ (временной мертвой зоне).


    const a = Symbol('x') // Symbol
    var b = 15n // BigInt
    let c = Number('25') // Number
    const d = parseInt('25xxx25') // Number
    var e = 25 // Number
    let f = 2 > 0 // Boolean
    const g = true // Boolean
    var h = true // Boolean
    let i  // Undefined
    const j = undefined // Undefined
    var k = undefined // Undefined
    let l = null // Null
    const m = null // Null
    var n = null // Null
    let o = toString(15) // String
    const p = [1,5].join('') // String
    var q = '15' // String


    const res = "B" + "a" + (1 - "hello");  // (1 - "String") === NaN
    console.log(res); // baNaN 
    
    const res2 = (true && 3) + "d"; // ('a' && 'b') === 'b'
    console.log(res2) // 3d 

    const res3 = Boolean(true && 3) + "d"; // Boolean(3) === true
    console.log(res3); //